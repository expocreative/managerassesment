{"version":3,"sources":["pages/styles/CSSDesignerListItem.js","pages/DesignerListItem.jsx"],"names":["CSSDesignerListItem","makeStyles","root","cursor","assigned","zone","width","height","display","flexDirection","alignItems","justifyContent","marginTop","backgroundColor","titleHolder","marginLeft","title","fontSize","color","pointerEvents","userSelect","subTitle","connect","state","quarter","default","userType","auth","year","ShowModel","DesignerToRemove","ChangeDesignerName","SaveDesignerValue","designer","clicked","dragStart","index","data","Number","split","classes","undefined","info","useState","editClicked","setEditClicked","suffix","name","designerName","setDesignerName","changeDesignerName","evt","email","replace","key","toLowerCase","id","draggable","className","onDragStart","onClick","Grid","container","direction","Input","value","onChange","target","onKeyPress","endAdornment","InputAdornment","position","IconButton","style","paddingLeft","designation","manager","search","length","aria-label","show","child"],"mappings":"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","file":"static/js/44.fd675c6d.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSDesignerListItem = makeStyles({\r\n    root:{\r\n        cursor:assigned=>assigned.zone?'auto':'move',\r\n        width:'100%',\r\n        height:40,\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'center',\r\n        justifyContent:'space-between',\r\n        marginTop:4,\r\n        backgroundColor:assigned=>assigned.zone ? '#efefef' : '#ffffff',\r\n        '&:hover':{\r\n            backgroundColor:assigned=>!assigned.zone && '#c9efff'\r\n        }\r\n    },\r\n    titleHolder:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        width:'100%',\r\n        marginLeft:10,\r\n    },\r\n    title:{\r\n        fontSize:14,\r\n        color:'black',\r\n        pointerEvents:'none',\r\n        userSelect:\"none\"\r\n    },\r\n    subTitle:{\r\n        fontSize:10,\r\n        color:'grey',\r\n        pointerEvents:'none'\r\n    }\r\n});","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { IconButton, Grid, Input, InputAdornment } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport { ShowModel } from '../redux/actions/Page';\r\nimport { DesignerToRemove,  SaveDesignerValue, ChangeDesignerName } from '../redux/actions/Designers';\r\nimport { CSSDesignerListItem } from \"./styles/CSSDesignerListItem\";\r\n\r\nconst DesignerListItem = ({designer, quarter, year, userType, clicked, dragStart, index, ShowModel, DesignerToRemove, ChangeDesignerName, SaveDesignerValue}) => {\r\n    let assigned = designer.data[year] && designer.data[year][Number(quarter.split('Q')[1]-1)];\r\n    assigned = assigned===null?undefined:assigned;\r\n    const classes = CSSDesignerListItem(assigned);\r\n    let info = designer.data[year]?designer.data[year][Number(quarter.split('Q')[1])-1]:null;\r\n\r\n    const [editClicked, setEditClicked] = useState(false);\r\n    let suffix = info!=null && info!==undefined ? info.suffix!==undefined?info.suffix:'' : '';\r\n    const[designerName, setDesignerName] = useState(designer.name+''+suffix);\r\n\r\n    const changeDesignerName = (evt) => {\r\n        ChangeDesignerName(designer.email, designerName);\r\n        suffix = designerName.split('(')[1] && designerName.split('(')[1].replace(')','');\r\n\r\n        if(suffix){\r\n            info.suffix = suffix?'('+suffix+')':'';\r\n            let key = designer.name.replace(/\\s/,'').toLowerCase()+'_'+year+'_'+quarter;\r\n            SaveDesignerValue(key, designer.email, info);\r\n        }\r\n\r\n        setEditClicked(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={\"lpanel_dlist_\"+index} draggable={!assigned || !assigned.zone} className={classes.root}\r\n                onDragStart={(evt)=>dragStart(evt, designer)}>\r\n                <div className={classes.titleHolder}  onClick={() => clicked()}>\r\n                    <Grid container direction='row' alignItems='center'>\r\n                        {\r\n                            editClicked ? <Input value={ designerName } onChange={(evt)=>setDesignerName(evt.target.value)} \r\n                                onKeyPress={(evt)=>evt.key==='Enter' && changeDesignerName()}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton onClick={changeDesignerName} >\r\n                                        <ArrowRightIcon />\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                            : <label className={classes.title} style={{color:info && info.zone && 'grey'}}>{ designerName }</label>\r\n                        }\r\n                        \r\n                        <label className={classes.title} style={{fontSize:11, paddingLeft:'5px', color:info && info.zone && 'grey'}}>({ designer.designation })</label>\r\n                    </Grid>\r\n                    { info && <div className={classes.subTitle}>{info.zone && 'is assgined on ' + info.zone} {info.manager && 'with ' + info.manager}</div>}\r\n                </div>\r\n                \r\n                { \r\n                    userType==='super' && \r\n                    <>\r\n                        {\r\n                            designer.designation.toLowerCase().search('manager')===-1 && \r\n                            info!=null && info.zone!==undefined && info.zone.length>=2 && <IconButton aria-label=\"edit name\" \r\n                                onClick={() => { setEditClicked(true); setDesignerName(designerName)}}>\r\n                                <EditIcon /> \r\n                            </IconButton>\r\n                        }\r\n                        \r\n                        {\r\n                            designer.designation.toLowerCase().search('manager')===-1 &&<IconButton aria-label=\"delete\" \r\n                                onClick={() => {DesignerToRemove(designer); ShowModel({show:true, child:'DeleteModel'})}}>\r\n                                <DeleteIcon /> \r\n                            </IconButton> \r\n                        }\r\n                        \r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n        quarter:state.default.quarter,\r\n        userType:state.auth.userType,\r\n        year:state.default.year\r\n    }\r\n}\r\n\r\n\r\nDesignerListItem.propTypes = {\r\n    designer:PropTypes.object,\r\n    year:PropTypes.string,\r\n    quarter:PropTypes.string,\r\n    userType:PropTypes.string,\r\n    ShowModel:PropTypes.func,\r\n    DesignerToRemove:PropTypes.func,\r\n    ChangeDesignerName:PropTypes.func,\r\n    SaveDesignerValue:PropTypes.func\r\n}\r\n\r\nexport default connect(stateToProps, { ShowModel, DesignerToRemove, ChangeDesignerName, SaveDesignerValue }) (DesignerListItem);"],"sourceRoot":""}