{"version":3,"sources":["pages/dialogs/FeedbackDialog.jsx","pages/goals/UnAssignedMembersList.jsx","../node_modules/@material-ui/core/esm/utils/isMuiElement.js","../node_modules/@material-ui/core/esm/List/ListContext.js","pages/styles/CSSGoalsLeftPanel.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/Slide/Slide.js","../node_modules/@material-ui/core/esm/List/List.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js"],"names":["Transition","React","forwardRef","props","ref","direction","useStyles","makeStyles","root","connect","state","designer","show","Clicked","handleClose","val","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","id","name","onClick","color","designerList","designers","designersList","user","auth","quarter","default","year","DesignerSelected","classes","CSSGoalsLeftPanel","useState","dialog","setDialog","otherDeisgner","setOtherDesigner","getDesigner","j","length","className","list","map","obj","data","Number","split","manager","isDesignerAssigned","value","button","selectOtherDesigner","primary","suffix","style","paddingLeft","isMuiElement","element","muiNames","indexOf","type","muiName","ListContext","width","height","window","innerHeight","noMsg","display","justifyContent","alignItems","subHeading","fontSize","marginLeft","marginTop","paddingBottom","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","other","_objectWithoutProperties","dense","Typography","_extends","variant","component","clsx","multiline","withStyles","flex","minWidth","marginBottom","setTranslateValue","node","transform","rect","getBoundingClientRect","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","parseInt","concat","innerWidth","left","top","getTranslateValue","webkitTransform","defaultTimeout","enter","duration","enteringScreen","exit","leavingScreen","Slide","_props$direction","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$timeout","timeout","_props$TransitionComp","theme","useTheme","childrenRef","handleOwnRef","instance","current","ReactDOM","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","handleEnter","reflow","handleEntering","transitionProps","getTransitionProps","mode","webkitTransition","transitions","create","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","handleResize","debounce","addEventListener","clear","removeEventListener","nodeRef","appear","childProps","visibility","List","_props$component","Component","_props$dense","_props$disablePadding","disablePadding","subheader","context","Provider","padding","listStyle","margin","position","paddingTop","useEnhancedEffect","ListItem","_props$alignItems","_props$autoFocus","autoFocus","_props$button","childrenProp","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","childContext","listItemRef","focus","toArray","hasSecondaryAction","componentProps","gutters","alignItemsFlexStart","secondaryAction","focusVisible","ButtonBase","container","pop","textDecoration","boxSizing","textAlign","backgroundColor","palette","action","opacity","borderBottom","backgroundClip","paddingRight","shortest","hover"],"mappings":"+NASMA,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,cAAC,IAAD,aAAOC,UAAU,KAAKD,IAAKA,GAASD,OAGzCG,EAAYC,YAAW,CACzBC,KAAK,KA2CMC,uBAZM,SAAAC,GACjB,MAAO,KAW0B,KAAtBD,EAtCQ,SAAC,GAA+B,IAA9BE,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAG/BC,GAFUR,IAEI,SAACS,GACjBF,EAAQE,KAGZ,OACI,eAAC,IAAD,CAAQC,KAAMJ,EAAMK,oBAAqBjB,EAAYkB,aAAW,EAACC,QAASL,EACtEM,kBAAgB,2BAA2BC,mBAAiB,iCADhE,UAEI,cAAC,IAAD,CAAaC,GAAG,2BAAhB,sBAEA,cAAC,IAAD,UACI,eAAC,IAAD,CAAmBA,GAAG,iCAAtB,UACCX,GAAYA,EAASY,KADtB,sFAKJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAQC,QAAS,kBAAIV,EAAY,OAAOW,MAAM,UAA9C,kBACA,cAAC,IAAD,CAAQD,QAAS,kBAAIV,EAAY,QAAQW,MAAM,UAA/C,6B,+HCmCDhB,uBAfM,SAAAC,GACjB,MAAO,CACHgB,aAAahB,EAAMiB,UAAUC,cAC7BC,KAAKnB,EAAMoB,KAAKD,KAChBE,QAAQrB,EAAMsB,QAAQD,QACtBE,KAAKvB,EAAMsB,QAAQC,QAUU,CAAEC,sBAAxBzB,EAhEe,SAAC,GAA2D,IAA1DiB,EAAyD,EAAzDA,aAAcO,EAA2C,EAA3CA,KAAMF,EAAqC,EAArCA,QAASF,EAA4B,EAA5BA,KAAMK,EAAsB,EAAtBA,iBACzDC,EAAUC,cADqE,EAEzDC,oBAAS,GAFgD,mBAE9EC,EAF8E,KAEtEC,EAFsE,OAG3CF,mBAAS,IAHkC,mBAG9EG,EAH8E,KAG/DC,EAH+D,KAmB/EC,EAAc,WAEhB,IADA,IAAI/B,EAAW,GACPgC,EAAE,EAAGA,EAAEjB,EAAakB,OAAQD,IAChC,GAAGjB,EAAaiB,GAAGpB,OAASiB,EAAc,CACtC7B,EAAWe,EAAaiB,GACxB,MAGR,OAAOhC,GAGX,OACI,qCACI,cAAC,IAAD,CAAMkC,UAAWV,EAAQW,KAAzB,SAEQpB,EAAaqB,KAAI,SAACC,GACd,IAAMC,EAAOD,EAAIC,KAAKhB,GAAMiB,OAAOnB,EAAQoB,MAAM,KAAK,GAAG,IACzD,OA/BO,SAACF,GACxB,OAAQA,GAAQA,EAAKC,OAAOnB,EAAQoB,MAAM,KAAK,IAAI,IAAMF,EAAKC,OAAOnB,EAAQoB,MAAM,KAAK,IAAI,GAAGC,UAAUvB,EAAKN,KA+B1F8B,CAAmBL,EAAIC,KAAKhB,KAAU,cAAC,IAAD,CAAyBqB,MAAON,EAAIzB,KAAOgC,QAAM,EAAC/B,QAAS,kBA5B7F,SAACwB,GACzBT,GAAU,GACVE,EAAiBO,EAAIzB,MA0BoGiC,CAAoBR,IAAnF,SAClC,cAAC,IAAD,CAAcS,QAAST,EAAIzB,KAAK,KAAK0B,EAAKS,OAAOT,EAAKS,OAAO,IAAKC,MAAO,CAACC,YAAY,OADrCZ,EAAIzB,WAOzE,cAAC,UAAD,CAAgBX,KAAM0B,EAAQ3B,SAAU+B,IAAe7B,QA9BzC,SAACE,GACb,QAANA,GAAemB,EAAiBQ,KAChCH,GAAU,a,iCC1BlB,6CACe,SAASsB,EAAaC,EAASC,GAC5C,OAAoB9D,iBAAqB6D,KAAwD,IAA5CC,EAASC,QAAQF,EAAQG,KAAKC,W,iCCFrF,WAKIC,EAAclE,gBAAoB,IAMvBkE,O,iCCXf,+CAEa/B,EAAoB7B,YAAW,CACxCC,KAAK,CACD4D,MAAM,IACNC,OAAOC,OAAOC,YAAY,KAE9BC,MAAM,CACFC,QAAQ,OACRJ,OAAO,IACPK,eAAe,SACfC,WAAW,UAEfC,WAAW,CACPC,SAAS,GACTpD,MAAM,OACNqD,WAAW,GACXC,WAAW,GACXC,cAAc,O,iCClBtB,kEAqCIC,EAA4BhF,cAAiB,SAAsBE,EAAOC,GAC5E,IAAI8E,EAAW/E,EAAM+E,SACjB/C,EAAUhC,EAAMgC,QAChBU,EAAY1C,EAAM0C,UAClBsC,EAAwBhF,EAAMiF,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAelF,EAAMmF,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAcpF,EAAMsD,QACpB+B,EAAyBrF,EAAMqF,uBAC/BC,EAAgBtF,EAAMuF,UACtBC,EAA2BxF,EAAMwF,yBACjCC,EAAQC,YAAyB1F,EAAO,CAAC,WAAY,UAAW,YAAa,oBAAqB,QAAS,UAAW,yBAA0B,YAAa,6BAG7J2F,EADoB7F,aAAiBkE,KACX2B,MAE1BrC,EAAyB,MAAf8B,EAAsBA,EAAcL,EAEnC,MAAXzB,GAAmBA,EAAQQ,OAAS8B,KAAeX,IACrD3B,EAAuBxD,gBAAoB8F,IAAYC,YAAS,CAC9DC,QAASH,EAAQ,QAAU,QAC3BjD,UAAWV,EAAQsB,QACnByC,UAAW,OACXzB,QAAS,SACRe,GAAyB/B,IAG9B,IAAIiC,EAAYD,EAWhB,OATiB,MAAbC,GAAqBA,EAAUzB,OAAS8B,KAAeX,IACzDM,EAAyBzF,gBAAoB8F,IAAYC,YAAS,CAChEC,QAAS,QACTpD,UAAWV,EAAQuD,UACnBjE,MAAO,gBACPgD,QAAS,SACRkB,GAA2BD,IAGZzF,gBAAoB,MAAO+F,YAAS,CACtDnD,UAAWsD,YAAKhE,EAAQ3B,KAAMqC,EAAWiD,GAAS3D,EAAQ2D,MAAOR,GAASnD,EAAQmD,MAAO7B,GAAWiC,GAAavD,EAAQiE,WACzHhG,IAAKA,GACJwF,GAAQnC,EAASiC,MA4DPW,gBAnIK,CAElB7F,KAAM,CACJ8F,KAAM,WACNC,SAAU,EACVxB,UAAW,EACXyB,aAAc,GAIhBJ,UAAW,CACTrB,UAAW,EACXyB,aAAc,GAIhBV,MAAO,GAGPR,MAAO,CACL1B,YAAa,IAIfH,QAAS,GAGTiC,UAAW,IAwGqB,CAChCnE,KAAM,mBADO8E,CAEZpB,I,iCC7IH,yFAmDO,SAASwB,EAAkBpG,EAAWqG,GAC3C,IAAIC,EArCN,SAA2BtG,EAAWqG,GACpC,IACIC,EADAC,EAAOF,EAAKG,wBAGhB,GAAIH,EAAKI,cACPH,EAAYD,EAAKI,kBACZ,CACL,IAAIC,EAAgBzC,OAAO0C,iBAAiBN,GAC5CC,EAAYI,EAAcE,iBAAiB,sBAAwBF,EAAcE,iBAAiB,aAGpG,IAAIC,EAAU,EACVC,EAAU,EAEd,GAAIR,GAA2B,SAAdA,GAA6C,kBAAdA,EAAwB,CACtE,IAAIS,EAAkBT,EAAUxD,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAClE+D,EAAUG,SAASD,EAAgB,GAAI,IACvCD,EAAUE,SAASD,EAAgB,GAAI,IAGzC,MAAkB,SAAd/G,EACK,cAAciH,OAAOhD,OAAOiD,WAAY,mBAAmBD,OAAOJ,EAAUN,EAAKY,KAAM,OAG9E,UAAdnH,EACK,eAAeiH,OAAOV,EAAKY,KAAOZ,EAAKxC,MAAQ8C,EAAS,OAG/C,OAAd7G,EACK,cAAciH,OAAOhD,OAAOC,YAAa,mBAAmB+C,OAAOH,EAAUP,EAAKa,IAAK,OAIzF,eAAeH,OAAOV,EAAKa,IAAMb,EAAKvC,OAAS8C,EAAS,OAI/CO,CAAkBrH,EAAWqG,GAEzCC,IACFD,EAAK/C,MAAMgE,gBAAkBhB,EAC7BD,EAAK/C,MAAMgD,UAAYA,GAG3B,IAAIiB,EAAiB,CACnBC,MAAOC,IAASC,eAChBC,KAAMF,IAASG,eAObC,EAAqBjI,cAAiB,SAAeE,EAAOC,GAC9D,IAAI8E,EAAW/E,EAAM+E,SACjBiD,EAAmBhI,EAAME,UACzBA,OAAiC,IAArB8H,EAA8B,OAASA,EACnDC,EAASjI,EAAMkI,GACfC,EAAUnI,EAAMmI,QAChBC,EAAYpI,EAAMoI,UAClBC,EAAarI,EAAMqI,WACnBC,EAAStI,EAAMsI,OACfC,EAAWvI,EAAMuI,SACjBC,EAAYxI,EAAMwI,UAClBhF,EAAQxD,EAAMwD,MACdiF,EAAiBzI,EAAM0I,QACvBA,OAA6B,IAAnBD,EAA4BhB,EAAiBgB,EACvDE,EAAwB3I,EAAMc,oBAC9BA,OAAgD,IAA1B6H,EAAmC9I,IAAa8I,EACtElD,EAAQC,YAAyB1F,EAAO,CAAC,WAAY,YAAa,KAAM,UAAW,YAAa,aAAc,SAAU,WAAY,YAAa,QAAS,UAAW,wBAErK4I,EAAQC,cACRC,EAAchJ,SAAa,MAK3BiJ,EAAejJ,eAAkB,SAAUkJ,GAE7CF,EAAYG,QAAUC,cAAqBF,KAC1C,IACCG,EAAwBC,YAAWrE,EAAS9E,IAAK8I,GACjDM,EAAYD,YAAWD,EAAuBlJ,GAE9CqJ,EAA+B,SAAsCC,GACvE,OAAO,SAAUC,GACXD,SAEkBE,IAAhBD,EACFD,EAAST,EAAYG,SAErBM,EAAST,EAAYG,QAASO,MAMlCE,EAAcJ,GAA6B,SAAU/C,EAAMiD,GAC7DlD,EAAkBpG,EAAWqG,GAC7BoD,YAAOpD,GAEH4B,GACFA,EAAQ5B,EAAMiD,MAGdI,EAAiBN,GAA6B,SAAU/C,EAAMiD,GAChE,IAAIK,EAAkBC,YAAmB,CACvCpB,QAASA,EACTlF,MAAOA,GACN,CACDuG,KAAM,UAERxD,EAAK/C,MAAMwG,iBAAmBpB,EAAMqB,YAAYC,OAAO,oBAAqBrE,YAAS,GAAIgE,EAAiB,CACxGM,OAAQvB,EAAMqB,YAAYE,OAAOC,WAEnC7D,EAAK/C,MAAM6G,WAAazB,EAAMqB,YAAYC,OAAO,YAAarE,YAAS,GAAIgE,EAAiB,CAC1FM,OAAQvB,EAAMqB,YAAYE,OAAOC,WAEnC7D,EAAK/C,MAAMgE,gBAAkB,OAC7BjB,EAAK/C,MAAMgD,UAAY,OAEnB6B,GACFA,EAAW9B,EAAMiD,MAGjBc,EAAgBhB,EAA6BlB,GAC7CmC,EAAgBjB,EAA6Bd,GAC7CgC,EAAalB,GAA6B,SAAU/C,GACtD,IAAIsD,EAAkBC,YAAmB,CACvCpB,QAASA,EACTlF,MAAOA,GACN,CACDuG,KAAM,SAERxD,EAAK/C,MAAMwG,iBAAmBpB,EAAMqB,YAAYC,OAAO,oBAAqBrE,YAAS,GAAIgE,EAAiB,CACxGM,OAAQvB,EAAMqB,YAAYE,OAAOM,SAEnClE,EAAK/C,MAAM6G,WAAazB,EAAMqB,YAAYC,OAAO,YAAarE,YAAS,GAAIgE,EAAiB,CAC1FM,OAAQvB,EAAMqB,YAAYE,OAAOM,SAEnCnE,EAAkBpG,EAAWqG,GAEzB+B,GACFA,EAAO/B,MAGPmE,EAAepB,GAA6B,SAAU/C,GAExDA,EAAK/C,MAAMwG,iBAAmB,GAC9BzD,EAAK/C,MAAM6G,WAAa,GAEpB9B,GACFA,EAAShC,MAGToE,EAAiB7K,eAAkB,WACjCgJ,EAAYG,SACd3C,EAAkBpG,EAAW4I,EAAYG,WAE1C,CAAC/I,IAyBJ,OAxBAJ,aAAgB,WAEd,IAAImI,GAAwB,SAAd/H,GAAsC,UAAdA,EAAtC,CAIA,IAAI0K,EAAeC,aAAS,WACtB/B,EAAYG,SACd3C,EAAkBpG,EAAW4I,EAAYG,YAI7C,OADA9E,OAAO2G,iBAAiB,SAAUF,GAC3B,WACLA,EAAaG,QACb5G,OAAO6G,oBAAoB,SAAUJ,OAEtC,CAAC1K,EAAW+H,IACfnI,aAAgB,WACTmI,GAGH0C,MAED,CAAC1C,EAAQ0C,IACQ7K,gBAAoBgB,EAAqB+E,YAAS,CACpEoF,QAASnC,EACTX,QAASuB,EACTtB,UAAWkC,EACXjC,WAAYuB,EACZtB,OAAQkC,EACRjC,SAAUmC,EACVlC,UAAW+B,EACXW,QAAQ,EACRhD,GAAID,EACJS,QAASA,GACRjD,IAAQ,SAAUlF,EAAO4K,GAC1B,OAAoBrL,eAAmBiF,EAAUc,YAAS,CACxD5F,IAAKoJ,EACL7F,MAAOqC,YAAS,CACduF,WAAsB,WAAV7K,GAAuB0H,OAAoBwB,EAAX,UAC3CjG,EAAOuB,EAAS/E,MAAMwD,QACxB2H,UAqEQpD,O,iCC7Rf,yDA8BIsD,EAAoBvL,cAAiB,SAAcE,EAAOC,GAC5D,IAAI8E,EAAW/E,EAAM+E,SACjB/C,EAAUhC,EAAMgC,QAChBU,EAAY1C,EAAM0C,UAClB4I,EAAmBtL,EAAM+F,UACzBwF,OAAiC,IAArBD,EAA8B,KAAOA,EACjDE,EAAexL,EAAM2F,MACrBA,OAAyB,IAAjB6F,GAAkCA,EAC1CC,EAAwBzL,EAAM0L,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAY3L,EAAM2L,UAClBlG,EAAQC,YAAyB1F,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,iBAAkB,cAErH4L,EAAU9L,WAAc,WAC1B,MAAO,CACL6F,MAAOA,KAER,CAACA,IACJ,OAAoB7F,gBAAoBkE,IAAY6H,SAAU,CAC5D1I,MAAOyI,GACO9L,gBAAoByL,EAAW1F,YAAS,CACtDnD,UAAWsD,YAAKhE,EAAQ3B,KAAMqC,EAAWiD,GAAS3D,EAAQ2D,OAAQ+F,GAAkB1J,EAAQ8J,QAASH,GAAa3J,EAAQ2J,WAC1H1L,IAAKA,GACJwF,GAAQkG,EAAW5G,OA4CTmB,gBA1FK,CAElB7F,KAAM,CACJ0L,UAAW,OACXC,OAAQ,EACRF,QAAS,EACTG,SAAU,YAIZH,QAAS,CACPI,WAAY,EACZrH,cAAe,GAIjBc,MAAO,GAGPgG,UAAW,CACTO,WAAY,IAsEkB,CAChC9K,KAAM,WADO8E,CAEZmF,I,iCCnGH,2FAiGIc,EAAsC,qBAAXhI,OAAyBrE,YAAkBA,kBAKtEsM,EAAwBtM,cAAiB,SAAkBE,EAAOC,GACpE,IAAIoM,EAAoBrM,EAAMwE,WAC1BA,OAAmC,IAAtB6H,EAA+B,SAAWA,EACvDC,EAAmBtM,EAAMuM,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAgBxM,EAAMoD,OACtBA,OAA2B,IAAlBoJ,GAAmCA,EAC5CC,EAAezM,EAAM+E,SACrB/C,EAAUhC,EAAMgC,QAChBU,EAAY1C,EAAM0C,UAClBgK,EAAgB1M,EAAM+F,UACtB4G,EAAwB3M,EAAM4M,mBAC9BA,OAA+C,IAA1BD,EAAmC,KAAOA,EAC/DE,EAAwB7M,EAAM8M,eAG9BC,GAFJF,OAAkD,IAA1BA,EAAmC,GAAKA,GAEjBnK,UAC3CoK,EAAiBpH,YAAyBmH,EAAuB,CAAC,cAClErB,EAAexL,EAAM2F,MACrBA,OAAyB,IAAjB6F,GAAkCA,EAC1CwB,EAAkBhN,EAAMiN,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwBlN,EAAMmN,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAiBpN,EAAMqN,QACvBA,OAA6B,IAAnBD,GAAoCA,EAC9CE,EAAwBtN,EAAMsN,sBAC9BC,EAAkBvN,EAAMwN,SACxBA,OAA+B,IAApBD,GAAqCA,EAChD9H,EAAQC,YAAyB1F,EAAO,CAAC,aAAc,YAAa,SAAU,WAAY,UAAW,YAAa,YAAa,qBAAsB,iBAAkB,QAAS,WAAY,iBAAkB,UAAW,wBAAyB,aAElP4L,EAAU9L,aAAiBkE,KAC3ByJ,EAAe,CACjB9H,MAAOA,GAASiG,EAAQjG,QAAS,EACjCnB,WAAYA,GAEVkJ,EAAc5N,SAAa,MAC/BqM,GAAkB,WACZI,GACEmB,EAAYzE,SACdyE,EAAYzE,QAAQ0E,UAKvB,CAACpB,IACJ,IAAIxH,EAAWjF,WAAe8N,QAAQnB,GAClCoB,EAAqB9I,EAAStC,QAAUiB,YAAaqB,EAASA,EAAStC,OAAS,GAAI,CAAC,4BACrFsG,EAAejJ,eAAkB,SAAUkJ,GAE7C0E,EAAYzE,QAAUC,cAAqBF,KAC1C,IACCK,EAAYD,YAAWL,EAAc9I,GAErC6N,EAAiBjI,YAAS,CAC5BnD,UAAWsD,YAAKhE,EAAQ3B,KAAMqC,EAAW+K,EAAa9H,OAAS3D,EAAQ2D,OAAQwH,GAAkBnL,EAAQ+L,QAASV,GAAWrL,EAAQqL,QAASJ,GAAYjL,EAAQiL,SAAU7J,GAAUpB,EAAQoB,OAAuB,WAAfoB,GAA2BxC,EAAQgM,oBAAqBH,GAAsB7L,EAAQiM,gBAAiBT,GAAYxL,EAAQwL,UACjUP,SAAUA,GACTxH,GAEC8F,EAAYmB,GAAiB,KAQjC,OANItJ,IACF0K,EAAe/H,UAAY2G,GAAiB,MAC5CoB,EAAeR,sBAAwBtH,YAAKhE,EAAQkM,aAAcZ,GAClE/B,EAAY4C,KAGVN,GAEFtC,EAAauC,EAAe/H,WAAc2G,EAAwBnB,EAAR,MAE/B,OAAvBqB,IACgB,OAAdrB,EACFA,EAAY,MAC0B,OAA7BuC,EAAe/H,YACxB+H,EAAe/H,UAAY,QAIXjG,gBAAoBkE,IAAY6H,SAAU,CAC5D1I,MAAOsK,GACO3N,gBAAoB8M,EAAoB/G,YAAS,CAC/DnD,UAAWsD,YAAKhE,EAAQoM,UAAWrB,GACnC9M,IAAKoJ,GACJyD,GAA8BhN,gBAAoByL,EAAWuC,EAAgB/I,GAAWA,EAASsJ,SAGlFvO,gBAAoBkE,IAAY6H,SAAU,CAC5D1I,MAAOsK,GACO3N,gBAAoByL,EAAW1F,YAAS,CACtD5F,IAAKoJ,GACJyE,GAAiB/I,OA0GPmB,iBA/RK,SAAgB0C,GAClC,MAAO,CAELvI,KAAM,CACJiE,QAAS,OACTC,eAAgB,aAChBC,WAAY,SACZyH,SAAU,WACVqC,eAAgB,OAChBrK,MAAO,OACPsK,UAAW,aACXC,UAAW,OACXtC,WAAY,EACZrH,cAAe,EACf,iBAAkB,CAChB4J,gBAAiB7F,EAAM8F,QAAQC,OAAOnB,UAExC,+BAAgC,CAC9BiB,gBAAiB7F,EAAM8F,QAAQC,OAAOnB,UAExC,aAAc,CACZoB,QAAS,KAKbR,UAAW,CACTnC,SAAU,YAIZiC,aAAc,GAGdvI,MAAO,CACLuG,WAAY,EACZrH,cAAe,GAIjBmJ,oBAAqB,CACnBxJ,WAAY,cAIdyI,SAAU,GAGVI,QAAS,CACPwB,aAAc,aAAa1H,OAAOyB,EAAM8F,QAAQrB,SAChDyB,eAAgB,eAIlBf,QAAS,CACPtK,YAAa,GACbsL,aAAc,IAIhB3L,OAAQ,CACNiH,WAAYzB,EAAMqB,YAAYC,OAAO,mBAAoB,CACvDvC,SAAUiB,EAAMqB,YAAYtC,SAASqH,WAEvC,UAAW,CACTV,eAAgB,OAChBG,gBAAiB7F,EAAM8F,QAAQC,OAAOM,MAEtC,uBAAwB,CACtBR,gBAAiB,iBAMvBR,gBAAiB,CAGfc,aAAc,IAIhBvB,SAAU,MA6MoB,CAChCpM,KAAM,eADO8E,CAEZkG","file":"static/js/27.c97df43f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, Button} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        \r\n    }\r\n})\r\n\r\nconst FeedbackDialog = ({designer, show, Clicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (val) => {\r\n        Clicked(val);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={show} TransitionComponent={Transition} keepMounted onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Feedback</DialogTitle>\r\n            \r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                {designer && designer.name} is not assigned with you in this quarter. do you still want to give feedback.\r\n                </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={()=>handleClose('no')} color=\"primary\"> no </Button>\r\n                <Button onClick={()=>handleClose('yes')} color=\"primary\"> yes </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nFeedbackDialog.propTypes = {\r\n    designer:PropTypes.object,\r\n    show:PropTypes.bool,\r\n    Clicked:PropTypes.func\r\n}\r\n\r\nexport default connect(stateToProps, null)(FeedbackDialog);","import React, {useState} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ListItem, ListItemText, List } from '@material-ui/core';\r\n\r\nimport { CSSGoalsLeftPanel } from \"../styles/CSSGoalsLeftPanel\";\r\nimport FeedbackDialog from \"../dialogs/FeedbackDialog.jsx\";\r\nimport { DesignerSelected } from \"../../redux/actions/Designers\";\r\n\r\nconst UnAssignedMembersList = ({designerList, year, quarter, user, DesignerSelected}) => {\r\n    const classes = CSSGoalsLeftPanel();\r\n    const [dialog, setDialog] = useState(false);\r\n    const [otherDeisgner, setOtherDesigner] = useState('');\r\n\r\n    const isDesignerAssigned = (data) => {\r\n        return (data && data[Number(quarter.split(\"Q\")[1])-1] && data[Number(quarter.split(\"Q\")[1])-1].manager!==user.name);\r\n    }\r\n\r\n    const selectOtherDesigner = (obj) => {\r\n        setDialog(true);\r\n        setOtherDesigner(obj.name);\r\n    }\r\n\r\n    const dialogClicked = (val) => {\r\n        val===\"yes\" && DesignerSelected(getDesigner());\r\n        setDialog(false);\r\n    }\r\n\r\n    const getDesigner = () => {\r\n        let designer = {};\r\n        for(let j=0; j<designerList.length; j++){\r\n            if(designerList[j].name === otherDeisgner){\r\n                designer = designerList[j];\r\n                break;\r\n            }\r\n        }\r\n        return designer;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <List className={classes.list}>\r\n                {\r\n                    designerList.map((obj) => {\r\n                        const data = obj.data[year][Number(quarter.split(\"Q\")[1]-1)];\r\n                        return (\r\n                            isDesignerAssigned(obj.data[year]) && <ListItem key={obj.name} value={obj.name}  button onClick={()=>selectOtherDesigner(obj)}>\r\n                                <ListItemText primary={obj.name+' '+(data.suffix?data.suffix:'')} style={{paddingLeft:10}} />\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n            <FeedbackDialog show={dialog} designer={getDesigner()} Clicked={dialogClicked} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n        designerList:state.designers.designersList,\r\n        user:state.auth.user,\r\n        quarter:state.default.quarter,\r\n        year:state.default.year\r\n    }\r\n}\r\n\r\nUnAssignedMembersList.propTypes = {\r\n    designerList:PropTypes.array,\r\n    user:PropTypes.object,\r\n    DesignerSelected:PropTypes.func,\r\n}\r\n\r\nexport default connect(stateToProps, { DesignerSelected})(UnAssignedMembersList);","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar ListContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSGoalsLeftPanel = makeStyles({\r\n    root:{\r\n        width:350,\r\n        height:window.innerHeight-300\r\n    },\r\n    noMsg:{\r\n        display:'flex',\r\n        height:100,\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    subHeading:{\r\n        fontSize:11,\r\n        color:'blue',\r\n        marginLeft:25,\r\n        marginTop:-10,\r\n        paddingBottom:10\r\n    }\r\n})","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return \"translateX(\".concat(window.innerWidth, \"px) translateX(\").concat(offsetX - rect.left, \"px)\");\n  }\n\n  if (direction === 'right') {\n    return \"translateX(-\".concat(rect.left + rect.width - offsetX, \"px)\");\n  }\n\n  if (direction === 'up') {\n    return \"translateY(\".concat(window.innerHeight, \"px) translateY(\").concat(offsetY - rect.top, \"px)\");\n  } // direction === 'down'\n\n\n  return \"translateY(-\".concat(rect.top + rect.height - offsetY, \"px)\");\n}\n\nexport function setTranslateValue(direction, node) {\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  var children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'down' : _props$direction,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  var handleRef = useForkRef(handleRefIntermediary, ref);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (isAppearing) {\n      if (callback) {\n        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n        if (isAppearing === undefined) {\n          callback(childrenRef.current);\n        } else {\n          callback(childrenRef.current, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(function (node) {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  var updatePosition = React.useCallback(function () {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nvar List = /*#__PURE__*/React.forwardRef(function List(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disablePadding = props.disablePadding,\n      disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding,\n      subheader = props.subheader,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  var context = React.useMemo(function () {\n    return {\n      dense: dense\n    };\n  }, [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);"],"sourceRoot":""}