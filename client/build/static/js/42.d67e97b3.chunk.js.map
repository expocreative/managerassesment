{"version":3,"sources":["pages/goals/GoalsRightPanelFooter.jsx","pages/styles/CSSGoalsRightPanel.js"],"names":["connect","state","user","auth","designerSelected","designers","quarter","default","year","otherFeedback","percent","SaveWholeDesignerData","SaveDesignerValue","PreviewGoal","showSaveBtn","isDesignerAssigned","jsonData","ivalue","setiValue","classes","CSSGoalsRightPanel","naviHandler","evt","val","currentTarget","id","split","values","length","saveData","data","Number","publish","pushBack","reason","manager","comment","prevFeedback","arr","key","name","replace","toLowerCase","console","log","email","container","className","footer","justify","direction","disabled","onClick","variant","color","extraFeedback","makeStyles","root","width","window","innerWidth","minWidth","height","innerHeight","main","padding","header","label","paddingTop","display","input","divider","marginTop","marginBottom","feedbackDisabled","resize","inputDisabled","textAlign","feedback","list","listOther","topRow","paddingBottom","iconBtn","cursor","iconBtnHolder","position","paddingRight","paddingLeft"],"mappings":"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","file":"static/js/42.d67e97b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport  PropTypes  from \"prop-types\";\r\n\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { CSSGoalsRightPanel } from \"../styles/CSSGoalsRightPanel\";\r\nimport { SaveWholeDesignerData, SaveDesignerValue, PreviewGoal } from \"../../redux/actions/Designers\";\r\n\r\nconst GoalsRightPanelFooter = ({showSaveBtn, user, designerSelected, otherFeedback, \r\n                                quarter, year, isDesignerAssigned, percent, SaveWholeDesignerData, SaveDesignerValue,\r\n                                PreviewGoal, jsonData, ivalue, setiValue}) => {\r\n\r\n    const classes = CSSGoalsRightPanel();\r\n    const naviHandler = (evt) => {\r\n        let val = ivalue;\r\n        if(evt.currentTarget.id.split(\"_\")[1] == \"next\"){\r\n            val += 1;\r\n\r\n            if(val>jsonData.values.length-1){\r\n                val = jsonData.values.length-1;\r\n                return;\r\n            }\r\n        }else{\r\n            val -= 1;\r\n            if(val<0) {\r\n                val = 0;\r\n                return;\r\n            }\r\n        }\r\n        PreviewGoal(false);\r\n        setiValue(val)\r\n    }\r\n\r\n    const saveData = (val) => {\r\n        let data = {...designerSelected.data[year][Number(quarter.split(\"Q\")[1])-1]};\r\n        data.values = jsonData.values;\r\n        data.publish = val;\r\n        \r\n        //if data is pushed back don't reset its value because we need to add count every time manager push back data//\r\n        data.pushBack = {\r\n            ...data.pushBack,\r\n            reason:'',\r\n            manager:'',\r\n            comment:''\r\n        }\r\n\r\n        data.prevFeedback = { arr:[], manager : '' };\r\n        let key = designerSelected.name.replace(/\\s/g,'').toLowerCase()+'_'+year+'_'+quarter;\r\n        console.log(key,designerSelected.email,data)\r\n        SaveWholeDesignerData(key, designerSelected.email, data);\r\n    }\r\n\r\n    const saveEFData = () => {\r\n        let data = {...designerSelected.data[year][Number(quarter.split(\"Q\")[1])-1]};\r\n        data.extraFeedback = {...otherFeedback, manager:user.name};\r\n        let key = designerSelected.name.replace(/\\s/,'').toLowerCase()+'_'+year+'_'+quarter;\r\n        SaveDesignerValue(key, designerSelected.email, data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            (isDesignerAssigned && isDesignerAssigned.toLowerCase()===user.name.toLowerCase()) ? \r\n                <Grid container className={classes.footer} justify='space-between' direction=\"row\">\r\n                    <div>\r\n                        <Button id=\"gls_back\" disabled={ivalue<=0} onClick={naviHandler}>back</Button>\r\n                        {\r\n                            showSaveBtn && <Button onClick={()=>saveData(false)}>save for later</Button>\r\n                        }\r\n                        <Button id=\"gls_next\" disabled={ivalue>=jsonData.values.length-1} onClick={naviHandler}>next</Button>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <Button onClick={()=>PreviewGoal(true)}>preview</Button>\r\n                        {\r\n                            showSaveBtn && ivalue>=jsonData.values.length-1 && <>\r\n                                <Button disabled={percent<98} onClick={()=>saveData(true)}>publish</Button> </>\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n            :<Button variant=\"contained\" color=\"primary\" onClick={saveEFData}>save</Button>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n        user:state.auth.user,\r\n        designerSelected:state.designers.designerSelected,\r\n        quarter:state.default.quarter,\r\n        year:state.default.year,\r\n        otherFeedback:state.designers.otherFeedback,\r\n        percent:state.designers.percent\r\n    }\r\n}\r\n\r\nGoalsRightPanelFooter.propTypes = {\r\n    user:PropTypes.object,\r\n    designerSelected:PropTypes.object,\r\n    year:PropTypes.string,\r\n    quarter:PropTypes.string,\r\n    SaveWholeDesignerData:PropTypes.func,\r\n    SaveDesignerValue:PropTypes.func,\r\n    percent:PropTypes.number,\r\n    PreviewGoal:PropTypes.func\r\n}\r\n\r\nexport default connect(stateToProps, { SaveWholeDesignerData, SaveDesignerValue, PreviewGoal })(GoalsRightPanelFooter);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSGoalsRightPanel = makeStyles({\r\n    root:{\r\n        width:window.innerWidth-500,\r\n        minWidth:600,\r\n        height:window.innerHeight-300\r\n    },\r\n    main:{\r\n        padding:10\r\n    },\r\n    header:{\r\n        width:'50%'\r\n    },\r\n    footer:{\r\n    },\r\n    label:{\r\n        height:30,\r\n        paddingTop:10,\r\n        display:'inline-block'\r\n    },\r\n    input:{\r\n        height:30,\r\n        display:'inline-block'\r\n    },\r\n    divider:{\r\n        marginTop:20,\r\n        marginBottom:20\r\n    },\r\n    feedbackDisabled:{\r\n        height:100,\r\n        display:'inline-block',\r\n        resize:'none'\r\n    },\r\n    inputDisabled:{\r\n        textAlign:\"right\",\r\n        display:'inline-block',\r\n        marginTop:10\r\n    },\r\n    feedback:{\r\n        height:230,\r\n        display:'inline-block'\r\n    },\r\n    list:{\r\n        height:window.innerHeight-400\r\n    },\r\n    listOther:{\r\n        marginTop:20,\r\n        height:window.innerHeight-420\r\n    },\r\n    topRow:{\r\n        paddingBottom:10,\r\n        height:45\r\n    },\r\n    iconBtn:{\r\n        width:30, \r\n        height:20,\r\n        cursor:'pointer'\r\n    },\r\n    iconBtnHolder:{\r\n        position:'absolute', \r\n        paddingRight:10, \r\n        paddingLeft:10, \r\n        paddingTop:8\r\n    }\r\n})"],"sourceRoot":""}