{"version":3,"sources":["pages/goals/AssignedMembersList.jsx","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/esm/utils/isMuiElement.js","../node_modules/@material-ui/core/esm/List/ListContext.js","pages/styles/CSSGoalsLeftPanel.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/List/List.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js"],"names":["connect","state","designerList","designers","designersList","user","auth","quarter","default","designerPublished","year","GetDesignerData","classes","CSSGoalsLeftPanel","membersList","arr","list","forEach","obj","data","Number","split","manager","toLowerCase","name","push","getAssignedMembers","className","length","map","index","Fragment","button","onClick","prevFeedback","title","color","fontSize","email","publish","primary","suffix","style","paddingLeft","pushBack","reason","container","direction","alignItems","count","extraFeedback","subHeading","variant","component","noMsg","useControlled","_ref","controlled","defaultProp","isControlled","React","undefined","current","_React$useState","valueState","setValue","newValue","isMuiElement","element","muiNames","indexOf","type","muiName","ListContext","makeStyles","root","width","height","window","innerHeight","display","justifyContent","marginLeft","marginTop","paddingBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","props","ref","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","concat","capitalize","withStyles","theme","margin","typography","caption","overline","srOnly","position","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","List","children","_props$component","_props$dense","dense","_props$disablePadding","disablePadding","subheader","context","Provider","value","padding","listStyle","paddingTop","useEnhancedEffect","ListItem","_props$alignItems","_props$autoFocus","autoFocus","_props$button","childrenProp","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","childContext","listItemRef","focus","toArray","hasSecondaryAction","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","gutters","alignItemsFlexStart","secondaryAction","focusVisible","ButtonBase","pop","textDecoration","boxSizing","backgroundColor","action","opacity","borderBottom","backgroundClip","paddingRight","transition","transitions","create","duration","shortest","hover"],"mappings":"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","file":"static/js/28.326b6400.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ListItem, ListItemText, ListItemSecondaryAction, Divider, Tooltip, Grid, List } from '@material-ui/core';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nimport { GetDesignerData } from \"../../redux/actions/Designers\";\r\nimport { CSSGoalsLeftPanel } from \"../styles/CSSGoalsLeftPanel\";\r\n\r\nconst getAssignedMembers = (arr, quarter, year, user) => {\r\n    let list = [];\r\n    arr.forEach(obj=>{\r\n        let data = obj.data[year] && obj.data[year][Number(quarter.split('Q')[1])-1];\r\n        if(data && data.manager && data.manager.toLowerCase() === user.name.toLowerCase()){\r\n            list.push(obj);\r\n        }\r\n    })\r\n    return list;\r\n}\r\n\r\nconst AssignedMembersListItem = ({designerList, user, year, quarter, designerPublished, GetDesignerData}) => {\r\n    const classes = CSSGoalsLeftPanel();\r\n    const membersList = getAssignedMembers([...designerList], quarter, year, user);\r\n    const listClicked = (designer) => {        \r\n        GetDesignerData(designer, year, quarter);\r\n    }\r\n\r\n    return (\r\n        <List className={classes.list}>\r\n        {\r\n            (membersList.length>=1) ? membersList.map((obj, index)=>{\r\n                const data = obj.data[year][Number(quarter.split(\"Q\")[1]-1)];\r\n                \r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        <ListItem button onClick={()=>listClicked(obj)}>\r\n                                {\r\n                                    data.prevFeedback.manager.length>=3 && \r\n                                    <Tooltip title={`feedback changed by - ${data.prevFeedback.manager}`}>\r\n                                        <FeedbackIcon color=\"secondary\" fontSize=\"small\" />\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    (obj.email===designerPublished || data.publish) && <CheckCircleIcon color=\"secondary\" fontSize=\"small\" />\r\n                                }\r\n                                \r\n                                <ListItemText primary={obj.name+' '+(data.suffix?data.suffix:'')} style={{paddingLeft:10}} />\r\n                                {\r\n                                    (data.pushBack.reason.length>=2) && \r\n                                    <ListItemSecondaryAction>\r\n                                        <Grid container direction=\"row\" alignItems='center'>\r\n                                            {\r\n                                                data.pushBack.reason.length>=2 && <>\r\n                                                <Tooltip title={`push back by - ${data.pushBack.manager}`}>\r\n                                                    <WarningIcon color=\"secondary\" fontSize=\"small\" />\r\n                                                </Tooltip>\r\n                                                <label style={{paddingLeft:2}}>{data.pushBack.count}</label></>\r\n                                            }\r\n                                            \r\n                                        </Grid>\r\n                                    </ListItemSecondaryAction>\r\n                                }\r\n                        </ListItem>\r\n                        \r\n                        {\r\n                            (data.extraFeedback && data.extraFeedback.manager) && \r\n                            <div className={classes.subHeading}>\r\n                                <label>{data.extraFeedback.manager} leaves a feedback for {obj.name}</label>\r\n                            </div>\r\n                        }\r\n\r\n                        <Divider variant=\"inset\" component=\"li\" />\r\n                    </React.Fragment>\r\n                )\r\n            }) : <div className={classes.noMsg}>\r\n                    <label>No Designer/Developer is assigned with you in this Quarter</label>\r\n                </div>\r\n        }\r\n        </List>\r\n    )\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n        designerList:state.designers.designersList,\r\n        user:state.auth.user,\r\n        quarter:state.default.quarter,\r\n        designerPublished:state.designers.designerPublished,\r\n        year:state.default.year\r\n    }\r\n}\r\n\r\nAssignedMembersListItem.propTypes = {\r\n    designerList:PropTypes.array,\r\n    user:PropTypes.object,\r\n    GetDesignerData:PropTypes.func,\r\n    designerPublished:PropTypes.string\r\n}\r\n\r\nexport default connect(stateToProps, {GetDesignerData})(AssignedMembersListItem);","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar ListContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSGoalsLeftPanel = makeStyles({\r\n    root:{\r\n        width:350,\r\n        height:window.innerHeight-300\r\n    },\r\n    noMsg:{\r\n        display:'flex',\r\n        height:100,\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    subHeading:{\r\n        fontSize:11,\r\n        color:'blue',\r\n        marginLeft:25,\r\n        marginTop:-10,\r\n        paddingBottom:10\r\n    }\r\n})","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nvar List = /*#__PURE__*/React.forwardRef(function List(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disablePadding = props.disablePadding,\n      disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding,\n      subheader = props.subheader,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  var context = React.useMemo(function () {\n    return {\n      dense: dense\n    };\n  }, [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);"],"sourceRoot":""}