{"version":3,"sources":["pages/styles/CSSGoalsHeader.js","pages/goals/GoalsHeader.jsx"],"names":["CSSGoalsHeader","makeStyles","header","display","justifyContent","width","height","alignItems","padding","select","fontSize","selectHolder","paddingLeft","paddingRight","col2","flexDirection","connect","state","zone","default","year","quarter","designerList","designers","designersList","quarterList","yearsList","user","auth","DesignerSelected","QuarterChanged","YearChanged","DownloadSheet","ZoneChanged","GetDesignerFeedback","classes","membersList","arr","list","forEach","obj","data","Number","split","manager","toLowerCase","name","push","getAssignedMembers","getSheetData","a","listData","j","length","replace","tdata","values","designation","downloadXLS","Paper","className","Select","value","displayEmpty","selectEmpty","inputProps","onChange","evt","target","undefined","map","val","index","MenuItem","Button","disabled","publish","enableDownloadData","variant","color","onClick"],"mappings":"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","file":"static/js/51.e1fd7bd4.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSGoalsHeader = makeStyles({\r\n    header:{\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        width:500,\r\n        height:50,\r\n        alignItems:'center',\r\n        '& label':{\r\n            padding:10\r\n        }\r\n    },\r\n    select:{\r\n        width:230,\r\n        height:40,\r\n        fontSize:13\r\n    },\r\n    selectHolder:{\r\n        paddingLeft:30,\r\n        paddingRight:30\r\n    },\r\n    col2:{\r\n        display:'flex',\r\n        flexDirection:'row'\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Paper, Select, MenuItem, Button } from '@material-ui/core';\r\n\r\nimport { DesignerSelected, GetDesignerFeedback } from \"../../redux/actions/Designers\";\r\nimport { CSSGoalsHeader } from \"../styles/CSSGoalsHeader\";\r\nimport { QuarterChanged, ZoneChanged, DownloadSheet, YearChanged } from \"../../redux/actions/Page\";\r\n\r\n//duplicate function in goals left panel//\r\nconst getAssignedMembers = (arr, quarter, year, user) => {\r\n    let list = [];\r\n    arr.forEach(obj=>{\r\n        let data = obj.data[year] && obj.data[year][Number(quarter.split('Q')[1])-1];\r\n        if(data && data.manager && data.manager.toLowerCase() === user.name.toLowerCase()){\r\n            list.push(obj);\r\n        }\r\n    })\r\n    return list;\r\n}\r\n\r\nconst GoalsHeader = ({designerList, quarter, zone, user, year, DesignerSelected, quarterList, yearsList,\r\n                    QuarterChanged, YearChanged, DownloadSheet, ZoneChanged, GetDesignerFeedback}) => {\r\n\r\n    const classes = CSSGoalsHeader();\r\n    const membersList = getAssignedMembers([...designerList], quarter, year, user);\r\n\r\n    const getSheetData = async() => {\r\n        let listData = [];\r\n        for(let j=0; j<designerList.length; j++){\r\n            let obj = designerList[j];\r\n            if(obj.data[year] && obj.data[year][Number(quarter.split('Q')[1])-1]\r\n                && obj.data[year][Number(quarter.split('Q')[1])-1].zone.replace(/\\s/g,'').toLowerCase() === zone.replace(/\\s/g,'').toLowerCase()){\r\n                    let tdata = {...obj.data[year][Number(quarter.split('Q')[1])-1]};\r\n                    tdata.values = await GetDesignerFeedback(obj, year, quarter);\r\n                    tdata.values.length >= 1 && listData.push({\r\n                        data:tdata,\r\n                        name:obj.name,\r\n                        designation:obj.designation\r\n                    });\r\n            }\r\n        }\r\n        return listData;\r\n    }\r\n\r\n    const enableDownloadData = () => {\r\n        let value = false;\r\n        for(let j=0; j<membersList.length; j++){\r\n            if(membersList[j].data[year][Number(quarter.split('Q')[1])-1].publish){\r\n                value = true;\r\n                break;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    const downloadXLS = async() => {\r\n        let tdata = await getSheetData();\r\n        DownloadSheet(user.name, tdata, 'am');\r\n    }\r\n\r\n    const yearSelected = (evt) => {\r\n        YearChanged(evt.target.value); DesignerSelected(undefined); \r\n        let zone = user.data[evt.target.value][Number(quarter.split('Q')[1])-1].zone;// ? user.data[evt.target.value][Number(quarter.split('Q')[1])-1].zone : 'Q1';\r\n        ZoneChanged(zone);\r\n    }\r\n\r\n    const quarterSelected = (evt) => {\r\n        QuarterChanged(evt.target.value); DesignerSelected(undefined); \r\n        ZoneChanged(user.data[year][Number(evt.target.value.split('Q')[1])-1].zone);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.header}>\r\n                <Select value={year} displayEmpty className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }} \r\n                    onChange={yearSelected} >\r\n                    {\r\n                        yearsList.map((val,index)=><MenuItem key={index} value={val}>{val}</MenuItem>)\r\n                    }\r\n                </Select>\r\n\r\n                <Select value={quarter} displayEmpty className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }} \r\n                    onChange={quarterSelected}>\r\n                    {\r\n                        quarterList.map((val,index)=><MenuItem key={index} value={val}>{val}</MenuItem>)\r\n                    }\r\n                </Select>\r\n\r\n                <label>{zone}</label>\r\n\r\n                <Button disabled={!enableDownloadData()} variant=\"contained\" color=\"primary\"\r\n                    onClick={()=>downloadXLS()}>download data</Button>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        zone:state.default.zone,\r\n        year:state.default.year,\r\n        quarter:state.default.quarter,\r\n        designerList:state.designers.designersList,\r\n        quarterList:state.default.quarterList,\r\n        yearsList:state.default.yearsList,\r\n        user:state.auth.user\r\n    }\r\n}\r\n\r\nGoalsHeader.propTypes = {\r\n    zone:PropTypes.string,\r\n    quarterList:PropTypes.array,\r\n    yearsList:PropTypes.array,\r\n    year:PropTypes.string,\r\n    quarter:PropTypes.string,\r\n    designerList:PropTypes.array,\r\n    DesignerSelected:PropTypes.func,\r\n    QuarterChanged:PropTypes.func,\r\n    YearChanged:PropTypes.func,\r\n    DownloadSheet:PropTypes.func,\r\n    user:PropTypes.object,\r\n    ZoneChanged:PropTypes.func,\r\n    GetDesignerFeedback:PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, {DesignerSelected, QuarterChanged, YearChanged, DownloadSheet, ZoneChanged, GetDesignerFeedback}) (GoalsHeader);"],"sourceRoot":""}