{"version":3,"sources":["pages/dialogs/FeedbackDialog.jsx","pages/goals/UnAssignedMembersList.jsx","../node_modules/@material-ui/core/esm/utils/isMuiElement.js","pages/styles/CSSGoalsLeftPanel.js","../node_modules/@material-ui/core/esm/List/ListContext.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/List/List.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js"],"names":["Transition","React","forwardRef","props","ref","direction","useStyles","makeStyles","root","connect","state","designer","show","Clicked","handleClose","val","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","id","name","onClick","color","designerList","designers","designersList","user","auth","quarter","default","year","DesignerSelected","classes","CSSGoalsLeftPanel","useState","dialog","setDialog","otherDeisgner","setOtherDesigner","getDesigner","j","length","className","list","map","obj","data","Number","split","manager","isDesignerAssigned","value","button","selectOtherDesigner","primary","suffix","style","paddingLeft","isMuiElement","element","muiNames","indexOf","type","muiName","width","height","window","innerHeight","noMsg","display","justifyContent","alignItems","subHeading","fontSize","marginLeft","marginTop","paddingBottom","ListContext","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","component","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","concat","capitalize","withStyles","theme","margin","typography","caption","overline","srOnly","position","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","List","children","_props$component","_props$dense","dense","_props$disablePadding","disablePadding","subheader","context","Provider","padding","listStyle","paddingTop","useEnhancedEffect","ListItem","_props$alignItems","_props$autoFocus","autoFocus","_props$button","childrenProp","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","gutters","alignItemsFlexStart","secondaryAction","focusVisible","ButtonBase","container","pop","textDecoration","boxSizing","backgroundColor","action","opacity","borderBottom","backgroundClip","paddingRight","transition","transitions","create","duration","shortest","hover","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","multiline","flex","minWidth"],"mappings":"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","file":"static/js/29.1e3e9326.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, Button} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        \r\n    }\r\n})\r\n\r\nconst FeedbackDialog = ({designer, show, Clicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (val) => {\r\n        Clicked(val);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={show} TransitionComponent={Transition} keepMounted onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Feedback</DialogTitle>\r\n            \r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                {designer && designer.name} is not assigned with you in this quarter. do you still want to give feedback.\r\n                </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={()=>handleClose('no')} color=\"primary\"> no </Button>\r\n                <Button onClick={()=>handleClose('yes')} color=\"primary\"> yes </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nFeedbackDialog.propTypes = {\r\n    designer:PropTypes.object,\r\n    show:PropTypes.bool,\r\n    Clicked:PropTypes.func\r\n}\r\n\r\nexport default connect(stateToProps, null)(FeedbackDialog);","import React, {useState} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ListItem, ListItemText, List } from '@material-ui/core';\r\n\r\nimport { CSSGoalsLeftPanel } from \"../styles/CSSGoalsLeftPanel\";\r\nimport FeedbackDialog from \"../dialogs/FeedbackDialog.jsx\";\r\nimport { DesignerSelected } from \"../../redux/actions/Designers\";\r\n\r\nconst UnAssignedMembersList = ({designerList, year, quarter, user, DesignerSelected}) => {\r\n    const classes = CSSGoalsLeftPanel();\r\n    const [dialog, setDialog] = useState(false);\r\n    const [otherDeisgner, setOtherDesigner] = useState('');\r\n\r\n    const isDesignerAssigned = (data) => {\r\n        return (data && data[Number(quarter.split(\"Q\")[1])-1] && data[Number(quarter.split(\"Q\")[1])-1].manager!==user.name);\r\n    }\r\n\r\n    const selectOtherDesigner = (obj) => {\r\n        setDialog(true);\r\n        setOtherDesigner(obj.name);\r\n    }\r\n\r\n    const dialogClicked = (val) => {\r\n        val===\"yes\" && DesignerSelected(getDesigner());\r\n        setDialog(false);\r\n    }\r\n\r\n    const getDesigner = () => {\r\n        let designer = {};\r\n        for(let j=0; j<designerList.length; j++){\r\n            if(designerList[j].name === otherDeisgner){\r\n                designer = designerList[j];\r\n                break;\r\n            }\r\n        }\r\n        return designer;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <List className={classes.list}>\r\n                {\r\n                    designerList.map((obj) => {\r\n                        const data = obj.data[year][Number(quarter.split(\"Q\")[1]-1)];\r\n                        return (\r\n                            isDesignerAssigned(obj.data[year]) && <ListItem key={obj.name} value={obj.name}  button onClick={()=>selectOtherDesigner(obj)}>\r\n                                <ListItemText primary={obj.name+' '+(data.suffix?data.suffix:'')} style={{paddingLeft:10}} />\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n            <FeedbackDialog show={dialog} designer={getDesigner()} Clicked={dialogClicked} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n        designerList:state.designers.designersList,\r\n        user:state.auth.user,\r\n        quarter:state.default.quarter,\r\n        year:state.default.year\r\n    }\r\n}\r\n\r\nUnAssignedMembersList.propTypes = {\r\n    designerList:PropTypes.array,\r\n    user:PropTypes.object,\r\n    DesignerSelected:PropTypes.func,\r\n}\r\n\r\nexport default connect(stateToProps, { DesignerSelected})(UnAssignedMembersList);","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSGoalsLeftPanel = makeStyles({\r\n    root:{\r\n        width:350,\r\n        height:window.innerHeight-300\r\n    },\r\n    noMsg:{\r\n        display:'flex',\r\n        height:100,\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    subHeading:{\r\n        fontSize:11,\r\n        color:'blue',\r\n        marginLeft:25,\r\n        marginTop:-10,\r\n        paddingBottom:10\r\n    }\r\n})","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar ListContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\n\nexport default ListContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nvar List = /*#__PURE__*/React.forwardRef(function List(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disablePadding = props.disablePadding,\n      disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding,\n      subheader = props.subheader,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  var context = React.useMemo(function () {\n    return {\n      dense: dense\n    };\n  }, [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);"],"sourceRoot":""}