{"version":3,"sources":["pages/styles/CSSGoalsHeader.js","pages/goals/GoalsHeader.jsx","utils/ddl.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["CSSGoalsHeader","makeStyles","header","display","justifyContent","width","height","alignItems","padding","select","fontSize","selectHolder","paddingLeft","paddingRight","col2","flexDirection","connect","state","zone","default","year","quarter","designerList","designers","designersList","quarterList","yearsList","user","auth","DesignerSelected","QuarterChanged","YearChanged","DownloadSheet","ZoneChanged","GetDesignerFeedback","DownloadSheetYear","classesDDL","useStyles","useState","selected","setSelected","classes","length","membersList","arr","list","forEach","obj","data","Number","split","manager","toLowerCase","name","push","getAssignedMembers","getSheetData","listData","j","replace","tdata","values","designation","enableDownloadData","value","publish","missingData","enableAllDownloadData","commonElements","filter","element","includes","console","log","downloadXLS","a","downloadYearXLS","toString","alert","Paper","className","Select","displayEmpty","selectEmpty","inputProps","onChange","evt","target","undefined","map","val","index","MenuItem","Button","disabled","variant","color","onClick","Divider","orientation","flexItem","FormControl","formControl","InputLabel","id","style","top","labelId","multiple","event","renderValue","join","MenuProps","i","ListItemIcon","Checkbox","checked","indexOf","ListItemText","primary","theme","indeterminateColor","selectAllText","fontWeight","selectedAll","backgroundColor","PaperProps","maxHeight","ITEM_HEIGHT","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","_props$color","component","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","margin","typography","caption","button","overline","srOnly","position","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock"],"mappings":"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","file":"static/js/36.517b98ef.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSGoalsHeader = makeStyles({\r\n    header:{\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        width:900,\r\n        height:50,\r\n        alignItems:'center',\r\n        '& label':{\r\n            padding:10\r\n        }\r\n    },\r\n    select:{\r\n        width:230,\r\n        height:40,\r\n        fontSize:13\r\n    },\r\n    selectHolder:{\r\n        paddingLeft:30,\r\n        paddingRight:30\r\n    },\r\n    col2:{\r\n        display:'flex',\r\n        flexDirection:'row'\r\n    }\r\n})","import React,{useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Paper, Select, MenuItem, Button,Divider} from '@material-ui/core';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n//import { SelectChangeEvent } from '@mui/material/Select';\r\n//import Checkbox from '@mui/material/Checkbox';\r\n\r\nimport { DesignerSelected, GetDesignerFeedback } from \"../../redux/actions/Designers\";\r\nimport { CSSGoalsHeader } from \"../styles/CSSGoalsHeader\";\r\nimport { QuarterChanged, ZoneChanged, DownloadSheet, YearChanged,DownloadSheetYear } from \"../../redux/actions/Page\";\r\nimport { MenuProps, useStyles, options } from \"../../utils/ddl\";\r\n\r\n//duplicate function in goals left panel//\r\nconst getAssignedMembers = (arr, quarter, year, user) => {\r\n   \r\n    let list = [];\r\n    arr.forEach(obj=>{\r\n        let data = obj.data[year] && obj.data[year][Number(quarter.split('Q')[1])-1];\r\n        if(data && data.manager && data.manager.toLowerCase() === user.name.toLowerCase()){\r\n            list.push(obj);\r\n        }\r\n    })\r\n    return list;\r\n}\r\n\r\n\r\nconst GoalsHeader = ({designerList, quarter, zone, user, year, DesignerSelected, quarterList, yearsList,\r\n                    QuarterChanged, YearChanged, DownloadSheet, ZoneChanged, GetDesignerFeedback,DownloadSheetYear}) => {\r\n\r\n    \r\n                        const classesDDL = useStyles();\r\n                        const [selected, setSelected] = useState([]);\r\n                        const isAllSelected =\r\n                        designerList.length > 0 && selected.length === designerList.length;\r\n                    \r\n                        const handleChange = (event) => {\r\n                            const value = event.target.value;\r\n                            if (value[value.length - 1] === \"all\") {\r\n                            setSelected(selected.length === designerList.length ? [] : designerList);\r\n                            return;\r\n                            }\r\n                            setSelected(value);\r\n                            //let isPublish=enableDownloadData()\r\n                            \r\n\r\n                            //await getMultiple({ id: 'asdf'}, { id: 'foo' }, { id: 'bar' })\r\n\r\n                        };\r\n    \r\n        const getMultiple= async(...objectsToGet)=> {\r\n            let users = [];\r\n            // await Promise.all(objectsToGet.map(obj =>\r\n            //   axios.get('/user/' + obj.id).then(response => {\r\n            //     // do something with response\r\n            //     users.push(response);\r\n            //   })\r\n            // ));\r\n            return users;\r\n          }\r\n          \r\n          // some other async context\r\n          ////console.log(await getMultiple({ id: 'asdf'}, { id: 'foo' }, { id: 'bar' }));\r\n                      \r\n    \r\n\r\n    const classes = CSSGoalsHeader();\r\n    const membersList = getAssignedMembers([...designerList], quarter, year, user);\r\n    //console.log(membersList)\r\n\r\n    const getSheetData = () => {\r\n        let listData = [];\r\n       // //console.log(designerList)\r\n        for(let j=0; j<designerList.length; j++){\r\n            let obj = designerList[j];\r\n            if(obj.data[year] && obj.data[year][Number(quarter.split('Q')[1])-1]\r\n                && obj.data[year][Number(quarter.split('Q')[1])-1].zone.replace(/\\s/g,'').toLowerCase() === zone.replace(/\\s/g,'').toLowerCase()){\r\n                    let tdata = {...obj.data[year][Number(quarter.split('Q')[1])-1]};\r\n                    tdata = {...obj.data[year][Number(quarter.split('Q')[1])-1]};//await GetDesignerFeedback(obj, year, quarter);\r\n                   //console.log(tdata.values.length)\r\n                    tdata.values.length >= 1 && listData.push({\r\n                        data:tdata,\r\n                        name:obj.name,\r\n                        designation:obj.designation\r\n                    });\r\n            }\r\n        }\r\n        return listData;\r\n    }\r\n\r\n    const enableDownloadData = () => {\r\n        let value = false;\r\n        for(let j=0; j<membersList.length; j++){\r\n            if(membersList[j].data[year][Number(quarter.split('Q')[1])-1].publish){\r\n                value = true;\r\n                break;\r\n            }\r\n        }\r\n       // console.log(membersList)\r\n        return value;\r\n    }\r\nlet missingData =[];\r\n    const enableAllDownloadData = () => {\r\n        missingData =[];\r\n        let value = true;\r\n        let commonElements = designerList.filter((element) => {\r\n           return selected.includes(element.name)\r\n        });\r\n        console.log(commonElements)\r\n        for(let j=0; j<commonElements.length; j++){\r\n           \r\n              if(!commonElements[j].data[year][Number(quarter.split('Q')[1])-1].publish){\r\n                missingData.push(commonElements[j].name)\r\n                value = false;\r\n                break;\r\n            }\r\n        \r\n           \r\n        }\r\n       // console.log(membersList)\r\n        return value;\r\n    }\r\n\r\n    const downloadXLS = async() => {\r\n        let tdata =  getSheetData();\r\n\r\n       DownloadSheet(user.name, tdata, 'am');\r\n    }\r\n    const downloadYearXLS = async() => {\r\n        //console.log(selected)\r\n       const isAllDatapresent= enableAllDownloadData();\r\n       //console.log(isAllDatapresent)\r\n       if(isAllDatapresent){\r\n        DownloadSheetYear(selected.toString(), year);\r\n       }\r\n       else{\r\n        alert(missingData.toString()+\"'\"+'s data missing')\r\n       }\r\n       \r\n    }\r\n    \r\n\r\n    const yearSelected = (evt) => {\r\n        YearChanged(evt.target.value); DesignerSelected(undefined); \r\n        let zone = user.data[evt.target.value][Number(quarter.split('Q')[1])-1].zone;// ? user.data[evt.target.value][Number(quarter.split('Q')[1])-1].zone : 'Q1';\r\n        ZoneChanged(zone);\r\n    }\r\n\r\n    const quarterSelected = (evt) => {\r\n        QuarterChanged(evt.target.value); DesignerSelected(undefined); \r\n        ZoneChanged(user.data[year][Number(evt.target.value.split('Q')[1])-1].zone);\r\n    }\r\n    const memberSlected=(evt)=>{\r\n        \r\n    }\r\n\r\n       \r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.header} >\r\n                <Select value={year} displayEmpty className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }} \r\n                    onChange={yearSelected} >\r\n                    {\r\n                        yearsList.map((val,index)=><MenuItem key={index} value={val}>{val}</MenuItem>)\r\n                    }\r\n                </Select>\r\n\r\n                <Select value={quarter} displayEmpty className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }} \r\n                    onChange={quarterSelected}>\r\n                    {\r\n                        quarterList.map((val,index)=><MenuItem key={index} value={val}>{val}</MenuItem>)\r\n                    }\r\n                </Select>\r\n\r\n                <label>{zone}</label>\r\n\r\n                <Button disabled={!enableDownloadData()} variant=\"contained\" color=\"primary\"\r\n                    onClick={()=>downloadXLS()}>download data</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                {/* <Select value={membersList} displayEmpty className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }} \r\n                    onChange={memberSlected}>\r\n                    {\r\n                        membersList.map((val,index)=><MenuItem key={index} value={val.name}>{val.name}</MenuItem>)\r\n                    }\r\n                </Select> */}\r\n        <FormControl className={classesDDL.formControl}>\r\n      <InputLabel id=\"mutiple-select-label\" style={{top:\"-11px\"}}> Select Designer </InputLabel>        \r\n        <Select\r\n                labelId=\"mutiple-select-label\"\r\n                multiple\r\n                value={selected}\r\n                onChange={handleChange}\r\n                renderValue={(selected) => selected.join(\", \")}\r\n                MenuProps={MenuProps}\r\n                >\r\n        {/* <MenuItem\r\n          value=\"all\"\r\n          classes={{\r\n            root: isAllSelected ? classesDDL.selectedAll : \"\"\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <Checkbox\r\n              classes={{ indeterminate: classesDDL.indeterminateColor }}\r\n              checked={isAllSelected}\r\n              indeterminate={\r\n                selected.length > 0 && selected.length < options.length\r\n              }\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{ primary: classesDDL.selectAllText }}\r\n            primary=\"Select All\"\r\n          />\r\n        </MenuItem> */}\r\n         {designerList.map((val,i) => (\r\n          <MenuItem key={i} value={val.name}>\r\n            <ListItemIcon>\r\n              <Checkbox checked={selected.indexOf(val.name) > -1} />\r\n            </ListItemIcon>\r\n            <ListItemText primary={val.name} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      </FormControl>\r\n      \r\n                <Button disabled={(selected.length<1 && enableDownloadData())} variant=\"contained\" color=\"primary\"\r\n                    onClick={()=>downloadYearXLS()}>download yearly  </Button>                        \r\n            </Paper>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        zone:state.default.zone,\r\n        year:state.default.year,\r\n        quarter:state.default.quarter,\r\n        designerList:state.designers.designersList,\r\n        quarterList:state.default.quarterList,\r\n        yearsList:state.default.yearsList,\r\n        user:state.auth.user\r\n    }\r\n}\r\n\r\nGoalsHeader.propTypes = {\r\n    zone:PropTypes.string,\r\n    quarterList:PropTypes.array,\r\n    yearsList:PropTypes.array,\r\n    year:PropTypes.string,\r\n    quarter:PropTypes.string,\r\n    designerList:PropTypes.array,\r\n    DesignerSelected:PropTypes.func,\r\n    QuarterChanged:PropTypes.func,\r\n    YearChanged:PropTypes.func,\r\n    DownloadSheet:PropTypes.func,\r\n    user:PropTypes.object,\r\n    ZoneChanged:PropTypes.func,\r\n    GetDesignerFeedback:PropTypes.func\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {DesignerSelected, QuarterChanged, YearChanged, DownloadSheet, ZoneChanged, GetDesignerFeedback,DownloadSheetYear}) (GoalsHeader);","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    width: 200,\r\n    top:-10\r\n    \r\n  },\r\n  indeterminateColor: {\r\n    color: \"#f50057\"\r\n  },\r\n  selectAllText: {\r\n    fontWeight: 500\r\n  },\r\n  selectedAll: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.08)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.08)\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\r\n      width: 200,\r\n      \r\n\r\n    }\r\n  },\r\n  getContentAnchorEl: null,\r\n  anchorOrigin: {\r\n    vertical: \"bottom\",\r\n    horizontal: \"center\"\r\n  },\r\n  transformOrigin: {\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  },\r\n  variant: \"menu\"\r\n};\r\n\r\nconst options = [\r\n  \"Manish Rao\",\r\n  \"Ashish Kumar\",\r\n  \"Rahul Kumar\",\r\n  \"Kamal Bist\",\r\n  \r\n];\r\n\r\nexport { useStyles, MenuProps, options };\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}