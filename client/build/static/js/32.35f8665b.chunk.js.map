{"version":3,"sources":["pages/goals/MultiSelect.jsx","pages/styles/CSSGoalsRow.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["GreenCheckbox","withStyles","root","color","green","checked","props","MultiSelect","classes","CSSGoalsRow","useState","arrData","setArrData","useEffect","data","split","className","inputList","value","displayEmpty","inputProps","multiple","renderValue","selected","join","style","background","bgclr","width","onChange","evt","enabled","changeHandler","target","options","map","val","index","indexOf","primary","length","marginTop","makeStyles","paddingBottom","col1","alignItems","label","height","minWidth","maxWidth","display","input","fontSize","textAreaHolder","minHeight","textArea","heading","padding","subHeading","overflowY","paddingTop","row","ListItemText","React","ref","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","other","_objectWithoutProperties","dense","ListContext","type","Typography","_extends","variant","component","clsx","multiline","flex","marginBottom","paddingLeft","name","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","Component","concat","capitalize","theme","margin","typography","caption","button","overline","srOnly","position","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorPrimary","palette","main","colorSecondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","disabled","icon","id","inputRef","onBlur","onFocus","readOnly","required","tabIndex","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","role","undefined","event","newChecked","cursor","opacity","top","left","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","backgroundColor","fade","action","hoverOpacity"],"mappings":"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","file":"static/js/32.35f8665b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Select, MenuItem, Checkbox, ListItemText, Grid, withStyles } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { CSSGoalsRow } from \"../styles/CSSGoalsRow\";\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst MultiSelect = (props) => {\r\n    const classes = CSSGoalsRow();\r\n    const [arrData, setArrData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        setArrData(props.data.split('|'));\r\n    }, [props.data]);\r\n\r\n    const handleChange = (evt) => {\r\n        if(props.enabled){\r\n            props.changeHandler(evt.target.value);\r\n            setArrData(evt.target.value);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        /*props.enabled ?\r\n        <Select disabled={!props.enabled} value={arrData} displayEmpty className={classes.input}\r\n            inputProps={{ 'aria-label': 'Without label' }} multiple\r\n            renderValue={(selected) => selected.join(', ')} style={{background:props.bgclr && 'yellow'}}\r\n            onChange={handleChange}>{\r\n                props.options.map((val, index)=>\r\n                    <MenuItem key={index} value={val}>\r\n                        <GreenCheckbox checked={arrData.indexOf(val) > -1} />\r\n                        <ListItemText primary={val} />\r\n                    </MenuItem>\r\n                )\r\n        }</Select>\r\n        :<Grid className={classes.inputList} container direction='column' style={{background:props.bgclr && 'yellow'}}>{\r\n                arrData.map((val,index)=>val.length>=2 && <li key={index} style={{marginTop:'3px'}}>{val}</li>)\r\n        }</Grid>*/\r\n\r\n        <div className={classes.inputList}>\r\n            <Select value={arrData} displayEmpty\r\n                inputProps={{ 'aria-label': 'Without label' }} multiple\r\n                renderValue={(selected) => selected.join('- ')} style={{background:props.bgclr && 'yellow', width:'100%'}}\r\n                onChange={handleChange}>{\r\n                    props.options.map((val, index)=>\r\n                        <MenuItem key={index} value={val}>\r\n                            { props.enabled && <GreenCheckbox checked={arrData.indexOf(val) > -1} /> }\r\n                            <ListItemText primary={val} />\r\n                        </MenuItem>\r\n                    )\r\n            }</Select>\r\n\r\n            {\r\n                arrData.map((val,index)=>val.length>=2 && <li key={index} style={{marginTop:'5px'}}>{val}</li>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiSelect;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSGoalsRow = makeStyles({\r\n    root:{\r\n        paddingBottom:20\r\n    },\r\n    col1:{\r\n        width:'100%',\r\n        alignItems:'flex-start'\r\n    },\r\n    label:{\r\n        height:30,\r\n        minWidth:'13%',\r\n        maxWidth:'15%',\r\n        display:'inline-block'\r\n    },\r\n    input:{\r\n        width:'30%',\r\n        height:30,\r\n        display:'inline-block',\r\n        fontSize:'14px'\r\n    },\r\n    inputList:{\r\n        width:'30%',\r\n        display:'inline-block',\r\n        fontSize:'14px',\r\n        height:'auto'\r\n    },\r\n    textAreaHolder:{\r\n        minWidth:'50%',\r\n        minHeight:'90px',\r\n        fontSize:'14px'\r\n    },\r\n    textArea:{\r\n        width:'98%',\r\n        minHeight:'70%'\r\n    },\r\n    heading:{\r\n        background:'#EEEEEE',\r\n        color:'black',\r\n        padding:5\r\n    },\r\n    subHeading:{\r\n        overflowY:'auto',\r\n        paddingTop:10,\r\n    },\r\n    row:{\r\n        marginTop:20,\r\n        fontSize:'14px',\r\n        \r\n    }\r\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}