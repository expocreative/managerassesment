{"version":3,"sources":["pages/goals/MultiSelect.jsx","pages/styles/CSSGoalsRow.js"],"names":["GreenCheckbox","withStyles","root","color","green","checked","props","MultiSelect","classes","CSSGoalsRow","useState","arrData","setArrData","useEffect","data","split","className","inputList","value","displayEmpty","inputProps","multiple","renderValue","selected","join","style","background","bgclr","width","onChange","evt","enabled","changeHandler","target","options","map","val","index","indexOf","primary","length","marginTop","makeStyles","paddingBottom","col1","alignItems","label","height","minWidth","maxWidth","display","input","fontSize","textAreaHolder","minHeight","textArea","heading","padding","subHeading","overflowY","paddingTop","row"],"mappings":"wMAMMA,EAAgBC,YAAW,CAC7BC,KAAM,CACJC,MAAOC,IAAM,KACb,YAAa,CACXD,MAAOC,IAAM,OAGjBC,QAAS,IAPSJ,EAQnB,SAACK,GAAD,OAAW,cAAC,IAAD,aAAUH,MAAM,WAAcG,OAsD7BC,UApDK,SAACD,GACjB,IAAME,EAAUC,cADW,EAEGC,mBAAS,IAFZ,mBAEpBC,EAFoB,KAEXC,EAFW,KAI3BC,qBAAU,WACND,EAAWN,EAAMQ,KAAKC,MAAM,QAC7B,CAACT,EAAMQ,OASV,OAiBI,cAhBA,CAgBA,OAAKE,UAAWR,EAAQS,UAAxB,UACI,cAAC,IAAD,CAAQC,MAAOP,EAASQ,cAAY,EAChCC,WAAY,CAAE,aAAc,iBAAmBC,UAAQ,EACvDC,YAAa,SAACC,GAAD,OAAcA,EAASC,KAAK,OAAOC,MAAO,CAACC,WAAWpB,EAAMqB,OAAS,SAAUC,MAAM,QAClGC,SA5BS,SAACC,GACfxB,EAAMyB,UACLzB,EAAM0B,cAAcF,EAAIG,OAAOf,OAC/BN,EAAWkB,EAAIG,OAAOf,SAsBtB,SAIQZ,EAAM4B,QAAQC,KAAI,SAACC,EAAKC,GAAN,OACd,eAAC,IAAD,CAAsBnB,MAAOkB,EAA7B,UACM9B,EAAMyB,SAAW,cAAC/B,EAAD,CAAeK,QAASM,EAAQ2B,QAAQF,IAAQ,IACnE,cAAC,IAAD,CAAcG,QAASH,MAFZC,QAQvB1B,EAAQwB,KAAI,SAACC,EAAIC,GAAL,OAAaD,EAAII,QAAQ,GAAK,oBAAgBf,MAAO,CAACgB,UAAU,OAAlC,SAA2CL,GAAlCC,W,iCC9DnE,+CAEa5B,EAAciC,YAAW,CAClCxC,KAAK,CACDyC,cAAc,IAElBC,KAAK,CACDhB,MAAM,OACNiB,WAAW,cAEfC,MAAM,CACFC,OAAO,GACPC,SAAS,MACTC,SAAS,MACTC,QAAQ,gBAEZC,MAAM,CACFvB,MAAM,MACNmB,OAAO,GACPG,QAAQ,eACRE,SAAS,QAEbnC,UAAU,CACNW,MAAM,MACNsB,QAAQ,eACRE,SAAS,OACTL,OAAO,QAEXM,eAAe,CACXL,SAAS,MACTM,UAAU,OACVF,SAAS,QAEbG,SAAS,CACL3B,MAAM,MACN0B,UAAU,OAEdE,QAAQ,CACJ9B,WAAW,UACXvB,MAAM,QACNsD,QAAQ,GAEZC,WAAW,CACPC,UAAU,OACVC,WAAW,IAEfC,IAAI,CACApB,UAAU,GACVW,SAAS","file":"static/js/43.e51de847.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Select, MenuItem, Checkbox, ListItemText, Grid, withStyles } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { CSSGoalsRow } from \"../styles/CSSGoalsRow\";\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst MultiSelect = (props) => {\r\n    const classes = CSSGoalsRow();\r\n    const [arrData, setArrData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        setArrData(props.data.split('|'));\r\n    }, [props.data]);\r\n\r\n    const handleChange = (evt) => {\r\n        if(props.enabled){\r\n            props.changeHandler(evt.target.value);\r\n            setArrData(evt.target.value);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        /*props.enabled ?\r\n        <Select disabled={!props.enabled} value={arrData} displayEmpty className={classes.input}\r\n            inputProps={{ 'aria-label': 'Without label' }} multiple\r\n            renderValue={(selected) => selected.join(', ')} style={{background:props.bgclr && 'yellow'}}\r\n            onChange={handleChange}>{\r\n                props.options.map((val, index)=>\r\n                    <MenuItem key={index} value={val}>\r\n                        <GreenCheckbox checked={arrData.indexOf(val) > -1} />\r\n                        <ListItemText primary={val} />\r\n                    </MenuItem>\r\n                )\r\n        }</Select>\r\n        :<Grid className={classes.inputList} container direction='column' style={{background:props.bgclr && 'yellow'}}>{\r\n                arrData.map((val,index)=>val.length>=2 && <li key={index} style={{marginTop:'3px'}}>{val}</li>)\r\n        }</Grid>*/\r\n\r\n        <div className={classes.inputList}>\r\n            <Select value={arrData} displayEmpty\r\n                inputProps={{ 'aria-label': 'Without label' }} multiple\r\n                renderValue={(selected) => selected.join('- ')} style={{background:props.bgclr && 'yellow', width:'100%'}}\r\n                onChange={handleChange}>{\r\n                    props.options.map((val, index)=>\r\n                        <MenuItem key={index} value={val}>\r\n                            { props.enabled && <GreenCheckbox checked={arrData.indexOf(val) > -1} /> }\r\n                            <ListItemText primary={val} />\r\n                        </MenuItem>\r\n                    )\r\n            }</Select>\r\n\r\n            {\r\n                arrData.map((val,index)=>val.length>=2 && <li key={index} style={{marginTop:'5px'}}>{val}</li>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiSelect;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSGoalsRow = makeStyles({\r\n    root:{\r\n        paddingBottom:20\r\n    },\r\n    col1:{\r\n        width:'100%',\r\n        alignItems:'flex-start'\r\n    },\r\n    label:{\r\n        height:30,\r\n        minWidth:'13%',\r\n        maxWidth:'15%',\r\n        display:'inline-block'\r\n    },\r\n    input:{\r\n        width:'30%',\r\n        height:30,\r\n        display:'inline-block',\r\n        fontSize:'14px'\r\n    },\r\n    inputList:{\r\n        width:'30%',\r\n        display:'inline-block',\r\n        fontSize:'14px',\r\n        height:'auto'\r\n    },\r\n    textAreaHolder:{\r\n        minWidth:'50%',\r\n        minHeight:'90px',\r\n        fontSize:'14px'\r\n    },\r\n    textArea:{\r\n        width:'98%',\r\n        minHeight:'70%'\r\n    },\r\n    heading:{\r\n        background:'#EEEEEE',\r\n        color:'black',\r\n        padding:5\r\n    },\r\n    subHeading:{\r\n        overflowY:'auto',\r\n        paddingTop:10,\r\n    },\r\n    row:{\r\n        marginTop:20,\r\n        fontSize:'14px'\r\n    }\r\n});"],"sourceRoot":""}