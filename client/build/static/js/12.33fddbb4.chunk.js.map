{"version":3,"sources":["pages/styles/CSSPushBackModel.js","pages/models/PushBackModel.jsx"],"names":["CSSPushBackModel","makeStyles","root","title","color","userSelect","pushBackModel","width","height","display","position","flexDirection","modelHeader","alignItems","backgroundColor","justifyContent","paddingLeft","btnHolder","msgHolder","marginTop","marginBottom","marginLeft","getModalStyle","top","window","innerHeight","left","innerWidth","connect","state","user","auth","model","default","arrReasons","ShowModel","SaveDesignerValue","classes","useState","reason","comment","formData","setState","enabled","setEnabled","onChange","evt","target","name","value","length","Modal","open","show","onClose","child","aria-labelledby","aria-describedby","Paper","className","style","IconButton","aria-label","onClick","Grid","container","direction","FormControl","formControl","InputLabel","id","Select","labelId","map","rvalue","rindex","MenuItem","paddingTop","placeholder","rows","cols","Button","disabled","designer","data","year","Number","quarter","split","pushBack","manager","count","publish","replace","toLowerCase","email","msg","variant"],"mappings":"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","file":"static/js/12.33fddbb4.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CSSPushBackModel = makeStyles({\r\n    root:{\r\n        \r\n    },\r\n    title:{\r\n        color:'green',\r\n        userSelect:'none'\r\n    }, \r\n    pushBackModel:{\r\n        width:500,\r\n        height:350,\r\n        display:'flex',\r\n        position:'absolute',\r\n        flexDirection:'column'\r\n    },\r\n    modelHeader:{\r\n        height:40,\r\n        display:'flex',\r\n        alignItems:'center',\r\n        backgroundColor:'#efefef',\r\n        justifyContent:'space-between',\r\n        paddingLeft:10\r\n    },\r\n    btnHolder:{\r\n        display:'flex',\r\n        justifyContent:'space-evenly',\r\n        alignItems:'center'\r\n    },\r\n    msgHolder:{\r\n        marginTop:20,\r\n        marginBottom:20,\r\n        width:'90%',\r\n        marginLeft:'5%'\r\n    }\r\n})","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Modal, Paper, IconButton, Button, Grid, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { ShowModel } from '../../redux/actions/Page';\r\nimport { CSSPushBackModel } from \"../styles/CSSPushBackModel\";\r\n\r\nimport { SaveDesignerValue } from '../../redux/actions/Designers';\r\n\r\nfunction getModalStyle() {\r\n    const top = window.innerHeight/2 - 125;\r\n    const left = window.innerWidth/2 - 200;\r\n  \r\n    return {\r\n      top: `${top}px`,\r\n      left: `${left}px`\r\n    };\r\n}\r\n\r\nconst PushBackModel = ({user, model, arrReasons, ShowModel, SaveDesignerValue}) => {\r\n    const classes = CSSPushBackModel();\r\n    const [formData, setState] = useState({reason:'', comment:''});\r\n    const [enabled, setEnabled] = useState(false);\r\n    const {reason, comment} = formData;\r\n\r\n    const pushbackFeedback = () => {\r\n        const designer = model.data.designer;\r\n        let data = {...designer.data[model.data.year][Number(model.data.quarter.split('Q')[1])-1]};\r\n        let pushBack = data.pushBack ? {...data.pushBack, reason:reason, comment:comment, manager:user.name, count:data.pushBack.count+1} : {\r\n            reason:reason,\r\n            comment:comment,\r\n            manager:user.name,\r\n            count:1\r\n        }\r\n\r\n        data.pushBack = pushBack;\r\n        data.publish = false;\r\n\r\n        SaveDesignerValue(designer.name.replace(/\\s/,'').toLowerCase()+'_'+model.data.year+'_'+model.data.quarter, designer.email, data);\r\n        ShowModel({show:true, child:'AutoHideModel', data:{msg:'feedback pushed back successfully!'}})\r\n    }\r\n\r\n    const onChange = (evt) => {\r\n        setState({...formData, [evt.target.name]:evt.target.value});\r\n        setEnabled(reason.length>=2 && comment.length>=2);\r\n    }\r\n\r\n    return (\r\n        <Modal open={model.show} onClose={()=>ShowModel({show:false, child:''})}\r\n            aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n            <Paper className={classes.pushBackModel} style={getModalStyle()}>\r\n                <div className={classes.modelHeader}>\r\n                    <label className={classes.title}>Push-back</label>\r\n                    <IconButton aria-label=\"x\" onClick={()=>ShowModel({show:false, child:''})}>\r\n                        <ClearIcon color=\"secondary\" />\r\n                    </IconButton>\r\n                </div>\r\n                \r\n                <Grid container direction=\"column\" className={classes.msgHolder}>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Reason*</InputLabel>\r\n                    <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" name=\"reason\"\r\n                        value={reason} onChange={onChange} >\r\n                            {\r\n                                arrReasons.map((rvalue,rindex)=><MenuItem key={rindex} value={rvalue}>{rvalue}</MenuItem>)\r\n                            }\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                    <label style={{paddingTop:20}}>Add Your Comment*</label>\r\n                    <textarea name=\"comment\" value={comment} placeholder=\"please add comment\" \r\n                        rows=\"8\" cols=\"50\" onChange={onChange}style={{'resize':'none'}} />\r\n                </Grid>\r\n\r\n                <div className={classes.btnHolder}>\r\n                    <Button disabled={!enabled} onClick={pushbackFeedback} color='primary' variant=\"contained\">confirm</Button>\r\n                    <Button onClick={()=>ShowModel({show:false, child:''})} variant=\"contained\">cancel</Button>\r\n                </div>\r\n            </Paper>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user:state.auth.user,\r\n        model:state.default.model,\r\n        arrReasons:state.default.arrReasons\r\n    }\r\n}\r\n\r\nPushBackModel.propTypes = {\r\n    ShowModel:PropTypes.func,\r\n    SaveDesignerValue:PropTypes.func,\r\n    arrReasons:PropTypes.array\r\n}\r\n\r\nexport default connect(mapStateToProps, {ShowModel, SaveDesignerValue})(PushBackModel);"],"sourceRoot":""}